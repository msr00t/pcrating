div class="col-xs-12 col-md-6 review #{'col-xs-offset-3' if centered}"
  div class="box #{review.id}"

    - if display_title
      .back
        = link_to "Back to Game", game_path(id: review.game.slug), class: 'back-link'
      h3
        = link_to review.game.title, game_path(id: review.game.slug), class: 'back-link'

    .row.info
      .col-xs-3.col-sm-2
        .score-box
          - if current_user
            = link_to "▲",
                      upvote_review_path(id: review.id),
                      remote: true,
                      format: :js,
                      class: "upvote #{'yellow' if current_user && current_user.voted_up_on?(review)}"
            = link_to "▼",
                      downvote_review_path(id: review.id),
                      remote: true,
                      class: "downvote #{'yellow' if current_user && current_user.voted_down_on?(review)}"
          .score
            = review.score
      .col-xs-4.col-sm-7
        - if show_user
          .reviewer
            = link_to review.user.username, user_path(id: review.user.slug)
      .col-xs-3.col-sm-3.rank
        = image_tag "#{review.rank}.jpg"


    .show-details-button.btn.btn-info Show Technical Details

    .row.stats
      .col-xs-12
        .stats.row
          - stat_groups = Reviews::Stats.by_group
          - stat_hash = review.stats
          .col-xs-12
            - Reviews::Stats.by_group.each do |name, questions|
              - next if name == :'Multiplayer' && !@game.in_category?('Multi-player') || name == :Opinion
              .stat-section.row
                .col-xs-12
                  .name
                    = name
                  .row
                  - questions.each do |question|
                    .col-xs-6.stat-string
                      = stat_hash[question[0]]

    hr

    - if review.opinion
      .opinion
        | Gameplay Score:
        = " #{review.opinion} / 10"

    - unless review.review.blank?

      .row.review-text
        .col-xs-12.review-text
          - if truncate_review
            = markdown truncate(review.review,
                                length: 500,
                                separator: ' ',
                                omission: "...")
            - if review.review.length > 500
              = link_to 'Read rest of review',
                        game_review_path(game_id: review.game.slug, id: review.id),
                        class: 'btn btn-primary'
          - else
            = markdown review.review

    .buttons
      - if current_user && review.user == current_user
        = link_to 'Edit',
                  edit_game_review_path(game_id: review.game.slug, id: review.id),
                  class: 'btn btn-info'
        = link_to 'Delete',
                  game_review_path(game_id: review.game.slug, id: review.id),
                  method: :delete,
                  class: 'btn btn-warning'
      - elsif current_user && current_user.moderator?
        = link_to 'Delete',
                  mod_destroy_review_path(id: review.id),
                  method: :delete,
                  class: 'btn btn-warning'

      - unless current_user && (current_user == review.user || review.reported_by?(current_user))
        = link_to 'Report',
                  game_review_report_path(game_id: params[:id], review_id: review.id),
                  class: 'yellow',
                  remote: :true,
                  method: :post